name: 'io-svc-cms'

# Define a shared network for all services to communicate on
networks:
  dev-network:
    driver: bridge

services:
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    # https://github.com/microsoft/vscode-dev-containers/blob/main/script-library/docs/docker.md#feature-use
    init: true
    networks:
      - dev-network
    env_file: .env.devcontainer
    # The 'required: false' flag tells Compose to not fail if a service isn't started (because its profile is off).
    depends_on:
      cosmosdb:
        condition: service_started
        required: false
    environment:
      # Disable the Corepack download prompt
      COREPACK_ENABLE_DOWNLOAD_PROMPT: 0
      # Set the Node.js environment to development
      NODE_ENV: development
    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached
    command: sleep infinity

  # "cosmosdb" is the name of the Docker Compose service, and is also used as the hostname for incoming connections
  cosmosdb:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:vnext-preview
    networks:
      - dev-network
    profiles: ['cosmosdb']
    # mem_limit: 3g
    # cpu_count: 2
    environment:
      # Low partition count to speed startup (note: will actually create 2 partitions)
      AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 1
      # Save data across starts
      AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: 'true'
      # Use the "https" protocol for the emulator
      PROTOCOL: https
      GATEWAY_PUBLIC_ENDPOINT: https://cosmosdb:8081
