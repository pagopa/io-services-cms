name: 'Azure Deploy Manual'

on:
  workflow_dispatch:
    inputs:
      package_url:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  RESOURCE_GROUP_ITN: io-p-itn-svc-rg-01
  AZURE_BACKOFFICE_NAME: io-p-itn-svc-bo-app-01
  BACKOFFICE_HEALTHCHECK_PATH: 'api/info'

jobs:
  deployments:
    name: App Deployments
    runs-on: [self-hosted]
    environment: app-prod-cd

    steps:
      - name: Download artifact
        id: download_artifact
        run: 'curl --output artifact.zip --location ${{ github.event.inputs.package_url }}'

      - name: Identify workload
        id: workload
        shell: bash
        run: |
          # Parse the release artifact name to retrieve app name
          echo name=$(echo "${{ contains(github.event.inputs.package_url, 'webapp') && env.AZURE_WEBAPP_NAME || env.AZURE_BACKOFFICE_NAME }}") >> "$GITHUB_OUTPUT"

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      # backoffice ITN
      - name: Deploy Backoffice to staging ITN
        if: contains(github.event.inputs.package_url, 'backoffice')
        uses: azure/webapps-deploy@145a0687697df1d8a28909569f6e5d86213041f9 #v3.0.0
        with:
          app-name: ${{ env.AZURE_BACKOFFICE_NAME }}
          package: artifact.zip
          slot-name: staging
          clean: true

      - name: 'Backoffice Healthcheck ITN'
        if: contains(github.event.inputs.package_url, 'backoffice')
        id: healthcheck_backoffice
        run: |
          sleep 30
          curl --retry 5 --retry-max-time 120 --retry-all-errors --fail-with-body 'https://${{ env.AZURE_BACKOFFICE_NAME }}-staging.azurewebsites.net/${{ env.BACKOFFICE_HEALTHCHECK_PATH }}'

      - name: 'Swap Backoffice staging to production ITN'
        if: contains(github.event.inputs.package_url, 'backoffice')
        id: swap_to_production_backoffice
        run: az webapp deployment slot swap -g ${{ env.RESOURCE_GROUP_ITN }} -n ${{ env.AZURE_BACKOFFICE_NAME }} --slot staging --target-slot production