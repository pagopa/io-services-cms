name: "Azure Deploy Manual"

on:
  workflow_dispatch:
    inputs:
      package_url:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: io-p-services-cms-webapp-fn
  RESOURCE_GROUP: io-p-services-cms-rg
  HEALTHCHECK_PATH: "api/v1/info"

jobs:
  deploy_app:
    name: Deploy App Job
    runs-on: ubuntu-22.04
    environment: prod-app-cd
    steps:
      - name: Download artifact
        run: "curl --output artifact.zip --location ${{ github.event.inputs.package_url }}"

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          resource-group-name: ${{ env.RESOURCE_GROUP }}
          package: artifact.zip
          slot-name: staging

      # healthcheck
      - name: "Healthcheck"
        id: healthcheck
        run: |
          # fails if response status is not 2xx
          curl -f 'https://${{ env.AZURE_WEBAPP_NAME }}-staging.azurewebsites.net/${{ env.HEALTHCHECK_PATH }}'

      # swap staging to production
      - name: "Swap staging to production"
        id: swap_to_production
        run: az webapp deployment slot swap -g ${{ env.RESOURCE_GROUP }} -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production
