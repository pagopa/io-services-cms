name: 'Azure Deploy'

on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: io-p-services-cms-webapp-fn
  RESOURCE_GROUP: io-p-services-cms-rg
  HEALTHCHECK_PATH: 'api/v1/info'

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment: prod-runner
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-create-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-create-action@13d5d0ae9550efdd5770b14029d346c7ad490d01
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          self_hosted_runner_image_tag: v1.4.2@sha256:330b40e255e12c798f4a6e784efc3189e12316499dd399a3e3e6487c9b32f824
          pat_token: ${{ secrets.BOT_TOKEN }}

  runner_job:
    name: Runner Job
    runs-on: [self-hosted, '${{ needs.create_runner.outputs.runner_name }}']
    environment: prod-app-cd
    needs: [create_runner]

    steps:
      - name: Download artifact
        id: download_artifact
        run: 'curl --output artifact.zip --location ${{ github.event.release.assets[0].browser_download_url }}'

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          resource-group-name: ${{ env.RESOURCE_GROUP }}
          package: artifact.zip
          slot-name: staging

      # healthcheck
      - name: 'Healthcheck'
        id: healthcheck
        run: |
          # fails if response status is not 2xx
          curl -f 'https://${{ env.AZURE_WEBAPP_NAME }}-staging.azurewebsites.net/${{ env.HEALTHCHECK_PATH }}'

      # swap staging to production
      - name: 'Swap staging to production'
        id: swap_to_production
        run: az webapp deployment slot swap -g ${{ env.RESOURCE_GROUP }} -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production

  cleanup_runner:
    name: Cleanup Runner
    if: always()
    runs-on: ubuntu-22.04
    environment: prod-runner
    needs: [create_runner, runner_job]
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-cleanup-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-cleanup-action@a0f06f9a3141ddbeb563044ce730ecd67a83d52d
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN }}
