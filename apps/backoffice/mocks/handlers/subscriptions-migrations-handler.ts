/**
 * This file was initially AUTO GENERATED by [msw-auto-mock](https://github.com/zoubingwu/msw-auto-mock)
 * Feel free to commit/edit it as you need.
 */
import { faker } from "@faker-js/faker/locale/it";
import { rest } from "msw";
import {
  getDelegatesByOrganizationMockResponse,
  getLatestOwnershipClaimStatusMockResponse,
  getOwnershipClaimStatusMockResponse
} from "../data/subscriptions-migration-data";

faker.seed(new Date().getTime());

export const buildHandlers = () => {
  const baseURL = process.env.SUBSCRIPTION_MIGRATIONS_URL;

  return [
    rest.get(
      `${baseURL}/organizations/:organizationFiscalCode/ownership-claims/latest`,
      (_, res, ctx) => {
        const resultArray = [
          [
            ctx.status(200),
            ctx.json(getLatestOwnershipClaimStatusMockResponse())
          ],
          [ctx.status(400), ctx.json(null)],
          [ctx.status(401), ctx.json(null)],
          [ctx.status(404), ctx.json(null)],
          [ctx.status(500), ctx.json(null)]
        ];

        return res(...resultArray[0]);
      }
    ),
    rest.get(
      `${baseURL}/organizations/:organizationFiscalCode/ownership-claims/:delegateId`,
      (_, res, ctx) => {
        const resultArray = [
          [ctx.status(200), ctx.json(getOwnershipClaimStatusMockResponse())],
          [ctx.status(400), ctx.json(null)],
          [ctx.status(401), ctx.json(null)],
          [ctx.status(404), ctx.json(null)],
          [ctx.status(500), ctx.json(null)]
        ];
        return res(...resultArray[0]);
      }
    ),
    rest.post(
      `${baseURL}/organizations/:organizationFiscalCode/ownership-claims/:delegateId`,
      (_, res, ctx) => {
        const resultArray = [
          [ctx.status(202)],
          [ctx.status(400), ctx.json(null)],
          [ctx.status(401), ctx.json(null)],
          [ctx.status(404), ctx.json(null)],
          [ctx.status(500), ctx.json(null)]
        ];
        return res(...resultArray[0]);
      }
    ),
    rest.get(
      `${baseURL}/organizations/:organizationFiscalCode/delegates`,
      (_, res, ctx) => {
        const resultArray = [
          [ctx.status(200), ctx.json(getDelegatesByOrganizationMockResponse())],
          [ctx.status(400), ctx.json(null)],
          [ctx.status(401), ctx.json(null)],
          [ctx.status(404), ctx.json(null)],
          [ctx.status(500), ctx.json(null)]
        ];
        return res(...resultArray[0]);
      }
    )
  ];
};
