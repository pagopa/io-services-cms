openapi: 3.0.3
info:
  title: IO BackOffice
  description: |-
    _This is the IO BackOffice Backend API specification based on the OpenAPI 3.0._

    ### Some useful links:
    - [IO-SERVICES-CMS Github codebase](https://github.com/pagopa/io-services-cms)
    - [IO-SERVICES-CMS Source API definition ](https://github.com/pagopa/io-services-cms/openapi.yaml)

  contact:
    name: PagoPA S.p.A.
    url: https://docs.pagopa.it/io-guida-tecnica/
  version: 0.2.0
servers:
  - url: http://localhost:3000/api #FIXME
tags:
  - name: auth
    description: Authentication API specification
  - name: services
    description: Services API specification
  - name: service-review
    description: Service Review API specification
  - name: service-release
    description: Service Release API specification
  - name: service-authorization
    description: Service Authorization API specification
  - name: service-migration
    description: Services migration API specification
  - name: institutions
    description: Institutions API specification
  - name: manage-keys
    description: Manage Keys API specification
paths:
  /info:
    get:
      description: Get runtime status information about the application
      operationId: info
      responses:
        '200':
          description: The application is up and running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        '500':
          description: The fails to startup due to misconfiguration or unreachable dependencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
  /health:
    get:
      description: Get health application status
      operationId: health
      responses:
        '200':
          description: The application is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          description: The application is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
  /auth: # /idp/selfcare/resolve-identity
    post:
      tags:
        - auth
      summary: Resolve selfcare identity
      description: Resolve selfcare identity
      operationId: resolveSelfCareIdentity
      requestBody:
        description: The _**IdentityToken**_ that SelfCare issues to BackOffice to communicate _**identity, company, role**_ tuple
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfCareIdentity'
        required: true
      responses:
        '200':
          description: BackOffice JWT session token.
          content:
            application/jwt:
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /services/migrations/ownership-claims/latest: #? valutare se mantenere la rotta as-is
    get:
      tags:
        - service-migration
      summary: Retrieve latest service migration status
      description: Retrieve latest service migration status, intended as a list of items containing delegate data, relative service migration status and last update date
      operationId: getServicesMigrationStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Service migration status fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationItemList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/migrations/delegates: #? valutare se mantenere la rotta as-is
    get:
      tags:
        - service-migration
      summary: Retrieve delegates with the number of services to migrate
      description: Retrieve delegates with the number of services to migrate
      operationId: getServicesMigrationDelegates
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Delegates with service to migrate fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationDelegateList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/migrations/ownership-claims/{delegateId}: #? valutare se mantenere la rotta as-is
    post:
      tags:
        - service-migration
      summary: Migrate delegate's services
      description: Migrate delegate's services
      operationId: migrateDelegatesServices
      security:
        - bearerAuth: []
      parameters:
        - name: delegateId
          in: path
          description: APIM Subscription ID for Delegate
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Delegate's services migrated successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    get:
      tags:
        - service-migration
      summary: Get delegate's services migration status
      description: Get delegate's services migration status
      operationId: getServicesMigrationDetails
      security:
        - bearerAuth: []
      parameters:
        - name: delegateId
          in: path
          description: APIM Subscription ID for Delegate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Delegate's services migration status fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services:
    post:
      tags:
        - services
      summary: Create a new service
      description: Create a new Service with the attributes provided in the request payload
      operationId: createService
      security:
        - bearerAuth: []
      requestBody:
        description: A service body payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePayload'
        required: true
      responses:
        '201':
          description: Service created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLifecycle'
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    get:
      tags:
        - services
      summary: Retrieve all services
      description: Retrieve all services owned by the calling user
      operationId: getServices
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: The number of services to return
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: The number of services to skip before starting to collect the result set
          required: false
          schema:
            type: number
            minimum: 0
            default: 0
      responses:
        '200':
          description: Services fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePagination'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/list:
    get:
      tags:
        - services
      summary: Retrieve all services
      description: Retrieve all services owned by the calling user
      operationId: getServiceList
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: The number of services to return
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: The number of services to skip before starting to collect the result set
          required: false
          schema:
            type: number
            minimum: 0
            default: 0
      responses:
        '200':
          description: Services fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}:
    get:
      tags:
        - services
      summary: Retrieve service
      description: Retrieve a service by ID
      operationId: getService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLifecycle'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    put:
      tags:
        - services
      summary: Update service
      description: Update an existing service by ID
      operationId: updateService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      requestBody:
        description: Updated service payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePayload'
        required: true
      responses:
        '200':
          description: Service updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLifecycle'
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    delete:
      tags:
        - services
      summary: Delete service
      description: Delete a service by ID
      operationId: deleteService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Service deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}/logo:
    put:
      tags:
        - services
      summary: Upload service logo
      description: Upload service logo by service ID
      operationId: updateServiceLogo
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      requestBody:
        description: Service logo payload _(base64 string representation)_
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logo'
        required: true
      responses:
        '204':
          description: Service logo updated successfully
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}/keys:
    get:
      tags:
        - service-authorization
      summary: Retrieve service keys
      description: Retrieve service keys by service ID
      operationId: getServiceKeys
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service keys fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionKeys'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}/keys/{keyType}:
    put:
      tags:
        - service-authorization
      summary: Regenerate service key
      description: Regenerate service key by service ID and key type
      operationId: regenerateServiceKey
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
        - name: keyType
          in: path
          description: Key type
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionKeyType'
      responses:
        '200':
          description: Service key regenerated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionKeys'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}/review:
    put:
      tags:
        - service-review
      summary: Send service to review
      description: Send service to review by service ID
      operationId: reviewService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      requestBody:
        description: Review Request option
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      responses:
        '204':
          description: Service revirew taken in charge
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '409':
          description: Service status is incompatible with review action request
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    patch:
      tags:
        - service-review
      summary: Explain service review
      description: Explain service review by service ID
      operationId: explainService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      requestBody:
        description: An explanation comment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '204':
          description: Service explained successfully
        '400':
          description: Invalid payload
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '409':
          description: Service status is incompatible with explain action request
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /services/{serviceId}/release:
    post:
      tags:
        - service-release
      summary: Publish service on IO
      description: Publish service by ID on __IO Platform__
      operationId: releaseService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Service published successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '409':
          description: Service status is incompatible with publish action request
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    get:
      tags:
        - service-release
      summary: Retrieve last published version of service
      description: Retrieve last version of service published on __IO Platform__
      operationId: getPublishedService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Fetched published service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePublication'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    delete:
      tags:
        - service-release
      summary: Unpublish service from IO
      description: Unpublish service by ID from __IO Platform__
      operationId: unpublishService
      security:
        - bearerAuth: []
      parameters:
        - name: serviceId
          in: path
          description: ID of the service
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Service unpublished successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /institutions:
    get:
      tags:
        - institutions
      summary: Retrieve all institutions
      description: Retrieves all the onboarded institutions related to the provided user and the product retrieved from Subscription Key
      operationId: getInstitutions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Institutions fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /institutions/{institutionId}:
    get:
      tags:
        - institutions
      summary: Retrieve Institution
      description: Retrieve an institution by ID
      operationId: getInstitution
      security:
        - bearerAuth: []
      parameters:
        - name: institutionId
          in: path
          description: ID of the institution
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Institution fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /keys/manage:
    get:
      tags:
        - manage-keys
      summary: Retrieve manage keys
      description: Retrieve manage keys
      operationId: getManageKeys
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Manage keys fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionKeys'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /keys/manage/{keyType}:
    put:
      tags:
        - manage-keys
      summary: Regenerate manage key
      description: Regenerate manage key by key type
      operationId: regenerateManageKey
      security:
        - bearerAuth: []
      parameters:
        - name: keyType
          in: path
          description: Key type
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionKeyType'
      responses:
        '200':
          description: Manage key regenerated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionKeys'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
  /keys/manage/cidrs:
    get:
      tags:
        - manage-keys
      summary: Retrieve manage key authorized CIDRs
      description: Retrieve manage key authorized CIDRs
      operationId: getManageKeysAuthorizedCidrs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Manage key authorized CIDRs fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageKeyCIDRs'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
    put:
      tags:
        - manage-keys
      summary: Update manage key authorized CIDRs
      description: Update manage key authorized CIDRs
      operationId: updateManageKeysAuthorizedCidrs
      security:
        - bearerAuth: []
      requestBody:
        description: An Authorized CIDRs body payload
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageKeyCIDRs'
        required: true
      responses:
        '200':
          description: Manage key Authorized CIDRs successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageKeyCIDRs'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '429':
          description: Too many requests
        '500':
          description: Internal server error
components:
  schemas:
    Info:
      type: object
      properties:
        version:
          type: string
          description: the application version
        name:
          type: string
          description: the application name
        health:
          $ref: '#/components/schemas/HealthStatus'
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          description: the application health status
        failures:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/HealthFailure'
    HealthFailure:
      type: object
      properties:
        service:
          type: string
          description: the service in error
        errorMessage:
          type: string
          description: the component failure message
    Health:
      type: object
      properties:
        status:
          type: string
          description: the application health status
    ServiceLifecycle:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceLifecycle'
    ServicePublication:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServicePublication'
    ServicePayload:
      type: object
      description: Service basic data
      properties:
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        require_secure_channel:
          type: boolean
        authorized_recipients:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/FiscalCode'
        authorized_cidrs:
          description: >-
            Allowed source IPs or CIDRs for this service.
            When empty, every IP address it's authorized to call the IO API on
            behalf of the service.
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/Cidr'
        max_allowed_payment_amount:
          type: integer
          format: int32
          minimum: 0
          maximum: 9999999999
          default: 0
        metadata:
          $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceMetadata'
      required:
        - name
        - description
        - metadata
    ServiceData:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceData'
    ServiceMetadata:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceMetadata'
    ServiceLifecycleStatus:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceLifecycleStatus'
    ServiceLifecycleStatusType:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceLifecycleStatusType'
    ServicePublicationStatusType:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServicePublicationStatusType'
    ServicePagination:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServicePagination'
    PaginationResultSet:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/PaginationResultSet'
    Organization:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/Organization'
    OrganizationFiscalCode:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/OrganizationFiscalCode'
    FiscalCode:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/FiscalCode'
    Logo:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/Logo'
    SubscriptionKeys:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/SubscriptionKeys'
    SubscriptionKeyType:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/SubscriptionKeyType'
    Cidr:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/Cidr'
    ResponseError:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/ResponseError'
    Comment:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/Comment'
    ReviewRequest:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ReviewRequest'
    Timestamp:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/Timestamp'
    ManageKeyCIDRs:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/backoffice-schemas.yaml#/ManageKeyCIDRs'
    MigrationItemList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MigrationItem'
    MigrationItem:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/MigrationItemStatus'
        delegate:
          $ref: '#/components/schemas/MigrationItemDelegate'
        lastUpdate:
          $ref: '#/components/schemas/Timestamp'
      required:
        - status
        - delegate
        - lastUpdate
    MigrationItemStatus:
      type: object
      properties:
        completed:
          type: number
          minimum: 0
        failed:
          type: number
          minimum: 0
        initial:
          type: number
          minimum: 0
        processing:
          type: number
          minimum: 0
      required:
        - completed
        - failed
        - initial
        - processing
    MigrationItemDelegate:
      type: object
      properties:
        sourceEmail:
          type: string
        sourceId:
          type: string
        sourceName:
          type: string
        sourceSurname:
          type: string
      required:
        - sourceEmail
        - sourceId
        - sourceName
        - sourceSurname
    MigrationDelegateList:
      type: object
      properties:
        delegates:
          type: array
          items:
            $ref: '#/components/schemas/MigrationDelegate'
    MigrationDelegate:
      allOf:
        - $ref: '#/components/schemas/MigrationItemDelegate'
        - type: object
          properties:
            subscriptionCounter:
              type: number
              minimum: 0
          required:
            - subscriptionCounter
    MigrationData:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/MigrationDataValue'
    MigrationDataValue:
      type: object
      properties:
        completed:
          type: number
          minimum: 0
        failed:
          type: number
          minimum: 0
        initial:
          type: number
          minimum: 0
        processing:
          type: number
          minimum: 0
    Institution:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/selfcare-schemas.yaml#/Institution'
    SelfCareIdentity:
      $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/backoffice-schemas.yaml#/SelfCareIdentity'
    ServiceList:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ServiceListItem'
        pagination:
          $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/commons-schemas.yaml#/PaginationResultSet'
      required:
        - value
        - pagination
    ServiceListItem:
      description: Service Lifecycle model data
      allOf:
        - type: object
          properties:
            visibility:
              type: string
              enum: [published, unpublished]
        - $ref: 'https://raw.githubusercontent.com/pagopa/io-services-cms/master/packages/io-services-cms-models/openapi/services-cms-schemas.yaml#/ServiceLifecycle'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
