/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import { Attributes } from "./Attributes";
import { PaymentServiceProvider } from "./PaymentServiceProvider";
import { DataProtectionOfficer } from "./DataProtectionOfficer";
import { GeographicTaxonomy } from "./GeographicTaxonomy";
import { RootParentResource } from "./RootParentResource";
import * as t from "io-ts";
import { EmailString } from "@pagopa/ts-commons/lib/strings";
import { enumType } from "@pagopa/ts-commons/lib/types";

export enum InstitutionTypeEnum {
  "GSP" = "GSP",

  "PA" = "PA",

  "PG" = "PG",

  "PSP" = "PSP",

  "PT" = "PT",

  "SCP" = "SCP",

  "SA" = "SA"
}

// required attributes
const InstitutionR = t.interface({});

// optional attributes
const InstitutionO = t.partial({
  id: t.string,

  externalId: t.string,

  originId: t.string,

  description: t.string,

  digitalAddress: EmailString,

  address: t.string,

  zipCode: t.string,

  taxCode: t.string,

  origin: t.string,

  institutionType: enumType<InstitutionTypeEnum>(
    InstitutionTypeEnum,
    "institutionType"
  ),

  attributes: Attributes,

  paymentServiceProvider: PaymentServiceProvider,

  dataProtectionOfficer: DataProtectionOfficer,

  geographicTaxonomies: t.readonlyArray(
    GeographicTaxonomy,
    "array of GeographicTaxonomy"
  ),

  rea: t.string,

  shareCapital: t.string,

  businessRegisterPlace: t.string,

  supportEmail: t.string,

  supportPhone: t.string,

  imported: t.boolean,

  logo: t.string,

  subunitCode: t.string,

  subunitType: t.string,

  aooParentCode: t.string,

  rootParent: RootParentResource
});

export const Institution = t.exact(
  t.intersection([InstitutionR, InstitutionO], "Institution")
);

export type Institution = t.TypeOf<typeof Institution>;
