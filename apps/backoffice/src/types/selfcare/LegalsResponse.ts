/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { enumType } from "@pagopa/ts-commons/lib/types";

export enum EnvEnum {
  "COLL" = "COLL",

  "DEV" = "DEV",

  "PROD" = "PROD",

  "ROOT" = "ROOT"
}

export enum RoleEnum {
  "DELEGATE" = "DELEGATE",

  "MANAGER" = "MANAGER",

  "OPERATOR" = "OPERATOR",

  "SUB_DELEGATE" = "SUB_DELEGATE"
}

// required attributes
const LegalsResponseR = t.interface({});

// optional attributes
const LegalsResponseO = t.partial({
  env: enumType<EnvEnum>(EnvEnum, "env"),

  partyId: t.string,

  relationshipId: t.string,

  role: enumType<RoleEnum>(RoleEnum, "role")
});

export const LegalsResponse = t.exact(
  t.intersection([LegalsResponseR, LegalsResponseO], "LegalsResponse")
);

export type LegalsResponse = t.TypeOf<typeof LegalsResponse>;
